// variaveis do grid
$cols: 12;
$gutter: 20px;
$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;
//Box-sizing: com o box sizing: border-box, a comprimento e largura
//  de um componente não muda, se for 200, será os 200, mesmo com padding
//Este seletor abaixo especifica que todos os elementos html, incluindo os after's e before's  sejam border-box
*,
*::after,
*::before {
    box-sizing: border-box;
}

// Mixin de media-querie
@mixin d($size) {
    @if $size==l {
        @media screen and (min-width: #{$l-device}) {
            @content;
        }
    }
    @else if $size==m {
        @media screen and (min-width: #{$m-device}) and (max-width: #{$l-device}) {
            @content;
        }
    }
    @else if $size==s {
        @media screen and (max-width: #{$m-device}) {
            @content;
        }
    }
}

@function grid($col, $offset: false) {
    $width: $col / $cols * 100 + "%";
    $result: calc(#{$width} - #{$gutter});
    @if $offset==offset {
        $gutter: $gutter / 2;
        $result: calc(#{$width} + #{$gutter});
    }
    @return $result;
}

// Gera as classes de grid
//grid em porcentagem cria um novo contexto, a exemplo quando tem um grid dentro de outro
@for $i from 1 through $cols {
    .grid-#{$i} {
        width: grid($i);
    }
}

// Mixin estrutura do grid 
@mixin grid-structure {
    float: left;
    min-height: 1px;
    margin-left: $gutter /2;
    margin-right: $gutter /2;
    @include d(s) {
        width: 100%;
        float: none;
        margin-left: 0px;
        margin-right: 0px;
    }
}

//Seletor que especifica tudo que comeca com 'grid-' terá a inclusão do grid-structure,
//ou seja, todas as classes de grid terá incluido o grid-structure
[class^="grid-"] {
    @include grid-structure;
}

// Gera as classes de offset * Lembrar que a ordem importa
@for $i from 1 through $cols {
    .offset-#{$i} {
        margin-left: grid($i, offset);
        @extend %offset;
    }
}

//O offset tem que sumir no mobile
@include d(s) {
    %offset {
        margin-left: 0px;
    }
}

//mixin de clearfix
@mixin clearfix {
    &::after,
    &::before {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin container {
    max-width: $l-device;
    margin: 0px auto;
    position: relative;
    @include d(m) {
        max-width: $m-device;
    }
    @include d(s) {
        max-width: $s-device;
        padding-left: 10px;
        padding-right: 10px;
    }
    @include clearfix;
}

.container {
    @include container();
}

@mixin row {
    position: relative;
    margin-left: -$gutter /2;
    margin-right: -$gutter / 2;
    @include d(s) {
        margin-left: 0px;
        margin-right: 0px;
    }
    @include clearfix();
}

.row {
    @include row();
}